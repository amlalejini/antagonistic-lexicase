#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=144:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=301-420
#SBATCH --mem=2G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name antlex-sn        # you can give your job a name for easier identification (same as -J)
 
########## Command Lines to Run ##########

module load powertools
module load GNU/7.3.0-2.30

EXPLORATION=TEST_MODE

DATA_DIR=/mnt/scratch/lalejini/data/ant-lex/sn-prelim/data
CONFIG_DIR=/mnt/scratch/lalejini/data/ant-lex/sn-prelim/config

#### Utility variables ####
COEVOLVE_TEST_MODE=0
STATIC_TEST_MODE=1
RANDOM_TEST_MODE=2
DRIFT_TEST_MODE=3

LEXICASE_SEL_MODE=0
COHORT_LEXICASE_SEL_MODE=1
TOURNAMENT_SEL_MODE=2

#### Treatments ####
# - Coevolving tests -
TESTS_COEVO__SEL_LEX__MIN=1
TESTS_COEVO__SEL_LEX__MAX=30

TESTS_COEVO__SEL_CLEX16__MIN=31
TESTS_COEVO__SEL_CLEX16__MAX=60

TESTS_COEVO__SEL_TOURN__MIN=61
TESTS_COEVO__SEL_TOURN__MAX=90

# - Static tests -
TESTS_STATIC__SEL_LEX__MIN=91
TESTS_STATIC__SEL_LEX__MAX=120

TESTS_STATIC__SEL_CLEX16__MIN=121
TESTS_STATIC__SEL_CLEX16__MAX=150

TESTS_STATIC__SEL_TOURN__MIN=151
TESTS_STATIC__SEL_TOURN__MAX=180

# - Randomly changing tests -
TESTS_RANDOM__SEL_LEX__MIN=181
TESTS_RANDOM__SEL_LEX__MAX=210

TESTS_RANDOM__SEL_CLEX16__MIN=211
TESTS_RANDOM__SEL_CLEX16__MAX=240

# - Drifting tests -
TESTS_DRIFT__SEL_LEX__MIN=241
TESTS_DRIFT__SEL_LEX__MAX=270

TESTS_DRIFT__SEL_CLEX16__MIN=271
TESTS_DRIFT__SEL_CLEX16__MAX=300

# - Cohort size = 32 -
TESTS_COEVO__SEL_CLEX32__MIN=301
TESTS_COEVO__SEL_CLEX32__MAX=330

TESTS_STATIC__SEL_CLEX32__MIN=331
TESTS_STATIC__SEL_CLEX32__MAX=360

TESTS_RANDOM__SEL_CLEX32__MIN=361
TESTS_RANDOM__SEL_CLEX32__MAX=390

TESTS_DRIFT__SEL_CLEX32__MIN=391
TESTS_DRIFT__SEL_CLEX32__MAX=420

#### General configuration ####
SEED=${SLURM_ARRAY_TASK_ID}


if [ ${SEED} -ge ${TESTS_COEVO__SEL_LEX__MIN} ] && [ ${SEED} -le ${TESTS_COEVO__SEL_LEX__MAX} ] ; then
NAME=TESTS_COEVO__SEL_LEX
TEST_MODE=${COEVOLVE_TEST_MODE}
SELECTION_MODE=${LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_COEVO__SEL_CLEX16__MIN} ] && [ ${SEED} -le ${TESTS_COEVO__SEL_CLEX16__MAX} ] ; then
NAME=TESTS_COEVO__SEL_CLEX16
TEST_MODE=${COEVOLVE_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_COEVO__SEL_TOURN__MIN} ] && [ ${SEED} -le ${TESTS_COEVO__SEL_TOURN__MAX} ] ; then
NAME=TESTS_COEVO__SEL_TOURN
TEST_MODE=${COEVOLVE_TEST_MODE}
SELECTION_MODE=${TOURNAMENT_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_STATIC__SEL_LEX__MIN} ] && [ ${SEED} -le ${TESTS_STATIC__SEL_LEX__MAX} ] ; then
NAME=TESTS_STATIC__SEL_LEX
TEST_MODE=${STATIC_TEST_MODE}
SELECTION_MODE=${LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_STATIC__SEL_CLEX16__MIN} ] && [ ${SEED} -le ${TESTS_STATIC__SEL_CLEX16__MAX} ] ; then
NAME=TESTS_STATIC__SEL_CLEX16
TEST_MODE=${STATIC_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_STATIC__SEL_TOURN__MIN} ] && [ ${SEED} -le ${TESTS_STATIC__SEL_TOURN__MAX} ] ; then
NAME=TESTS_STATIC__SEL_TOURN
TEST_MODE=${STATIC_TEST_MODE}
SELECTION_MODE=${TOURNAMENT_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_RANDOM__SEL_LEX__MIN} ] && [ ${SEED} -le ${TESTS_RANDOM__SEL_LEX__MAX} ] ; then
NAME=TESTS_RANDOM__SEL_LEX
TEST_MODE=${RANDOM_TEST_MODE}
SELECTION_MODE=${LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_RANDOM__SEL_CLEX16__MIN} ] && [ ${SEED} -le ${TESTS_RANDOM__SEL_CLEX16__MAX} ] ; then
NAME=TESTS_RANDOM__SEL_CLEX16
TEST_MODE=${RANDOM_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_DRIFT__SEL_LEX__MIN} ] && [ ${SEED} -le ${TESTS_DRIFT__SEL_LEX__MAX} ] ; then
NAME=TESTS_DRIFT__SEL_LEX
TEST_MODE=${DRIFT_TEST_MODE}
SELECTION_MODE=${LEXICASE_SEL_MODE}
COHORT_SIZE=16

elif [ ${SEED} -ge ${TESTS_DRIFT__SEL_CLEX16__MIN} ] && [ ${SEED} -le ${TESTS_DRIFT__SEL_CLEX16__MAX} ] ; then
NAME=TESTS_DRIFT__SEL_CLEX16
TEST_MODE=${DRIFT_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=16

# --- csize = 32 ---

elif [ ${SEED} -ge ${TESTS_COEVO__SEL_CLEX32__MIN} ] && [ ${SEED} -le ${TESTS_COEVO__SEL_CLEX32__MAX} ] ; then
NAME=TESTS_COEVO__SEL_CLEX32
TEST_MODE=${COEVOLVE_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=32

elif [ ${SEED} -ge ${TESTS_STATIC__SEL_CLEX32__MIN} ] && [ ${SEED} -le ${TESTS_STATIC__SEL_CLEX32__MAX} ] ; then
NAME=TESTS_STATIC__SEL_CLEX32
TEST_MODE=${STATIC_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=32

elif [ ${SEED} -ge ${TESTS_RANDOM__SEL_CLEX32__MIN} ] && [ ${SEED} -le ${TESTS_RANDOM__SEL_CLEX32__MAX} ] ; then
NAME=TESTS_RANDOM__SEL_CLEX32
TEST_MODE=${RANDOM_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=32

elif [ ${SEED} -ge ${TESTS_DRIFT__SEL_CLEX32__MIN} ] && [ ${SEED} -le ${TESTS_DRIFT__SEL_CLEX32__MAX} ] ; then
NAME=TESTS_DRIFT__SEL_CLEX32
TEST_MODE=${DRIFT_TEST_MODE}
SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
COHORT_SIZE=32

else 
echo "${SEED} failed to launch" >> /mnt/home/lalejini/devo_ws/antagonistic-lexicase/hpcc/sub/failtolaunch.txt

fi

RUN_NAME=${NAME}__${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

# Make run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

# Run the experiment
./sorting_networks -SEED ${SEED} -TEST_MODE ${TEST_MODE} -SELECTION_MODE ${SELECTION_MODE} -COHORT_SIZE ${COHORT_SIZE} > run.log

