#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=168:00:00            # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=80,81,82,83,84,85,86,136,137,138,139,140,171,172,388,389
#SBATCH --mem=8G                    # memory required per node - amount of memory (in bytes)
#SBATCH --job-name sn-s8h           # you can give your job a name for easier identification (same as -J)
#SBATCH --account=devolab

########## Command Lines to Run ##########
DATA_DIR=/mnt/home/lalejini/data/ant-lex/sn-exp/data
CONFIG_DIR=/mnt/home/lalejini/data/ant-lex/sn-exp/config

#### Utility variables ####
COEVOLVE_TEST_MODE=0
STATIC_TEST_MODE=1
RANDOM_TEST_MODE=2
DRIFT_TEST_MODE=3

LEXICASE_SEL_MODE=0
COHORT_LEXICASE_SEL_MODE=1
TOURNAMENT_SEL_MODE=2

FULL_EVAL_GENERATIONS=32000
COHORT_EVAL_GENERATIONS=1000000

FULL_EVAL_SNAPSHOT_INT=3200
COHORT_EVAL_SNAPSHOT_INT=100000

#### General parameters ####
SEED=$((SLURM_ARRAY_TASK_ID + 2000))
SORTS_PER_TEST=8
COHORT_SIZE=32
COLLECT_TEST_PHYLOGENIES=0

#### Treatments ####
# - Cohort size = 32 treatments -
TESTS_STATIC__SEL_CLEX32__MIN=1
TESTS_STATIC__SEL_CLEX32__MAX=100

TESTS_RANDOM__SEL_CLEX32__MIN=101
TESTS_RANDOM__SEL_CLEX32__MAX=200

TESTS_DRIFT__SEL_CLEX32__MIN=201
TESTS_DRIFT__SEL_CLEX32__MAX=300

TESTS_COEVO__SEL_CLEX32__MIN=301
TESTS_COEVO__SEL_CLEX32__MAX=400

# - Full Lexicase treatments -
TESTS_STATIC__SEL_LEX__MIN=401
TESTS_STATIC__SEL_LEX__MAX=500

TESTS_RANDOM__SEL_LEX__MIN=501
TESTS_RANDOM__SEL_LEX__MAX=600

TESTS_DRIFT__SEL_LEX__MIN=601
TESTS_DRIFT__SEL_LEX__MAX=700

TESTS_COEVO__SEL_LEX__MIN=701
TESTS_COEVO__SEL_LEX__MAX=800

# - Tournament treatment(s) -
TESTS_STATIC__SEL_TOURN__MIN=801
TESTS_STATIC__SEL_TOURN__MAX=900

############################################

if [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_STATIC__SEL_LEX__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_STATIC__SEL_LEX__MAX} ] ; then
  NAME=TESTS_STATIC__SEL_LEX__SPT_${SORTS_PER_TEST}
  TEST_MODE=${STATIC_TEST_MODE}
  SELECTION_MODE=${LEXICASE_SEL_MODE}
  GENERATIONS=${FULL_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${FULL_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_RANDOM__SEL_LEX__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_RANDOM__SEL_LEX__MAX} ] ; then
  NAME=TESTS_RANDOM__SEL_LEX__SPT_${SORTS_PER_TEST}
  TEST_MODE=${RANDOM_TEST_MODE}
  SELECTION_MODE=${LEXICASE_SEL_MODE}
  GENERATIONS=${FULL_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${FULL_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_DRIFT__SEL_LEX__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_DRIFT__SEL_LEX__MAX} ] ; then
  NAME=TESTS_DRIFT__SEL_LEX__SPT_${SORTS_PER_TEST}
  TEST_MODE=${DRIFT_TEST_MODE}
  SELECTION_MODE=${LEXICASE_SEL_MODE}
  GENERATIONS=${FULL_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${FULL_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_COEVO__SEL_LEX__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_COEVO__SEL_LEX__MAX} ] ; then
  NAME=TESTS_COEVO__SEL_LEX__SPT_${SORTS_PER_TEST}
  TEST_MODE=${COEVOLVE_TEST_MODE}
  SELECTION_MODE=${LEXICASE_SEL_MODE}
  GENERATIONS=${FULL_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${FULL_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_STATIC__SEL_CLEX32__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_STATIC__SEL_CLEX32__MAX} ] ; then
  NAME=TESTS_STATIC__SEL_CLEX32__SPT_${SORTS_PER_TEST}
  TEST_MODE=${STATIC_TEST_MODE}
  SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
  GENERATIONS=${COHORT_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${COHORT_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_RANDOM__SEL_CLEX32__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_RANDOM__SEL_CLEX32__MAX} ] ; then
  NAME=TESTS_RANDOM__SEL_CLEX32__SPT_${SORTS_PER_TEST}
  TEST_MODE=${RANDOM_TEST_MODE}
  SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
  GENERATIONS=${COHORT_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${COHORT_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_DRIFT__SEL_CLEX32__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_DRIFT__SEL_CLEX32__MAX} ] ; then
  NAME=TESTS_DRIFT__SEL_CLEX32__SPT_${SORTS_PER_TEST}
  TEST_MODE=${DRIFT_TEST_MODE}
  SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
  GENERATIONS=${COHORT_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${COHORT_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_COEVO__SEL_CLEX32__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_COEVO__SEL_CLEX32__MAX} ] ; then
  NAME=TESTS_COEVO__SEL_CLEX32__SPT_${SORTS_PER_TEST}
  TEST_MODE=${COEVOLVE_TEST_MODE}
  SELECTION_MODE=${COHORT_LEXICASE_SEL_MODE}
  GENERATIONS=${COHORT_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${COHORT_EVAL_SNAPSHOT_INT}

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TESTS_STATIC__SEL_TOURN__MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TESTS_STATIC__SEL_TOURN__MAX} ] ; then
  NAME=TESTS_STATIC__SEL_TOURN__SPT_${SORTS_PER_TEST}
  TEST_MODE=${STATIC_TEST_MODE}
  SELECTION_MODE=${TOURNAMENT_SEL_MODE}
  GENERATIONS=${FULL_EVAL_GENERATIONS}
  SNAPSHOT_INTERVAL=${FULL_EVAL_SNAPSHOT_INT}

else
  echo "${SLURM_ARRAY_TASK_ID} failed to launch" >> /mnt/home/lalejini/devo_ws/antagonistic-lexicase/hpcc/sub/sn-failtolaunch.txt

fi

############################################

RUN_NAME=${NAME}__${SEED}
RUN_DIR=${DATA_DIR}/${RUN_NAME}

# Make run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

./sorting_networks -SEED ${SEED} -SORTS_PER_TEST ${SORTS_PER_TEST} -COHORT_SIZE ${COHORT_SIZE} -TEST_MODE ${TEST_MODE} -SELECTION_MODE ${SELECTION_MODE} -GENERATIONS ${GENERATIONS} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -COLLECT_TEST_PHYLOGENIES ${COLLECT_TEST_PHYLOGENIES} > run.log