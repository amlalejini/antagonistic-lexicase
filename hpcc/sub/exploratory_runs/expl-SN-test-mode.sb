#!/bin/bash
########## Define Resources Needed with SBATCH Lines ##########
 
#SBATCH --time=00:05:00             # limit of wall clock time - how long the job will run (same as -t)
#SBATCH --array=1-80
#SBATCH --mem=2G                        # memory required per node - amount of memory (in bytes)
#SBATCH --job-name test_mode_explr      # you can give your job a name for easier identification (same as -J)
 
 
########## Command Lines to Run ##########

module load powertools
module load GNU/7.3.0-2.30

EXPLORATION=TEST_MODE

DATA_DIR=/mnt/scratch/lalejini/data/ant-lex/exploration
CONFIG_DIR=/mnt/scratch/lalejini/data/ant-lex/config

# CL-32
CL32_MIN=1
CL32_MAX=10
# CL-64
CL64_MIN=11
CL64_MAX=20
# CL-128
CL128_MIN=21
CL128_MAX=30
# L
LEX_MIN=31
LEX_MAX=40
# TOURNAMENT
TOURN_MIN=41
TOURN_MAX=50
# STATIC
STATIC_MIN=51
STATIC_MAX=60
# RANDOM
RANDOM_MIN=61
RANDOM_MAX=70
# DRIFT
DRIFT_MIN=71
DRIFT_MAX=80

# General parameters
SEED=${SLURM_ARRAY_TASK_ID}
GENERATIONS=100000
NETWORK_POP_SIZE=1024
TEST_POP_SIZE=1024

MAX_NETWORK_SIZE=128
MIN_NETWORK_SIZE=50

PER_INDEX_SUB=0.005000
PER_PAIR_INS=0.005000
PER_PAIR_DEL=0.005000
PER_PAIR_SWAP=0.005000

PER_ORG_CROSSOVER=0.25
PER_ORG_MUTATION=0.9

SORT_SIZE=16
SORTS_PER_TEST=16

PER_SITE_SUB=0.050000
PER_SEQ_INVERSION=0.100000
PER_SEQ_RANDOMIZE=0.010000

SNAPSHOT_INTERVAL=1000
AGGREGATE_STATS_INTERVAL=100
CORRECTNESS_SAMPLE_SIZE=4096
SOLUTION_SCREEN_INTERVAL=100

if [ ${SLURM_ARRAY_TASK_ID} -ge ${CL32_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${CL32_MAX} ] ; then 
  NAME=COEVOCL32
  TEST_MODE=0
  COHORT_SIZE=32
  SELECTION_MODE=1

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${CL64_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${CL64_MAX} ]; then 
  NAME=COEVOCL64
  TEST_MODE=0
  COHORT_SIZE=64
  SELECTION_MODE=1

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${CL128_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${CL128_MAX} ]; then 
  NAME=COEVOCL128
  TEST_MODE=0
  COHORT_SIZE=128
  SELECTION_MODE=1

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${LEX_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${LEX_MAX} ]; then 
  NAME=COEVOLEX
  TEST_MODE=0
  COHORT_SIZE=0
  SELECTION_MODE=0

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${TOURN_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${TOURN_MAX} ]; then 
  NAME=COEVOTOURN4
  TEST_MODE=0
  COHORT_SIZE=0
  SELECTION_MODE=2

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${STATIC_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${STATIC_MAX} ]; then 
  NAME=STATIC
  TEST_MODE=1
  COHORT_SIZE=64
  SELECTION_MODE=1

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${RANDOM_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${RANDOM_MAX} ]; then 
  NAME=RANDOM
  TEST_MODE=2
  COHORT_SIZE=64
  SELECTION_MODE=1

elif [ ${SLURM_ARRAY_TASK_ID} -ge ${DRIFT_MIN} ] && [ ${SLURM_ARRAY_TASK_ID} -le ${DRIFT_MAX} ]; then 
  NAME=DRIFT
  TEST_MODE=3
  COHORT_SIZE=64
  SELECTION_MODE=1
else
  NAME=HELLO
  TEST_MODE=10
  COHORT_SIZE=0
  SELECTION_MODE=10
fi

RUN_NAME=NAME_${NAME}__TM${TEST_MODE}__SM${SELECTION_MODE}__CS${COHORT_SIZE}__${SLURM_ARRAY_TASK_ID}
RUN_DIR=${DATA_DIR}/${EXPLORATION}/${RUN_NAME}

# Make run directory
mkdir -p ${RUN_DIR}

cd ${RUN_DIR}

cp -R ${CONFIG_DIR}/* .

# echo "${SLURM_ARRAY_TASK_ID}" > jobid.txt

# Run experiment
./antagonistic_lexicase -SEED ${SEED} -GENERATIONS ${GENERATIONS} -NETWORK_POP_SIZE ${NETWORK_POP_SIZE} -TEST_POP_SIZE ${TEST_POP_SIZE} -MAX_NETWORK_SIZE ${MAX_NETWORK_SIZE} -MIN_NETWORK_SIZE ${MIN_NETWORK_SIZE} -PER_INDEX_SUB ${PER_INDEX_SUB} -PER_PAIR_INS ${PER_PAIR_INS} -PER_PAIR_DEL ${PER_PAIR_DEL} -PER_PAIR_SWAP ${PER_PAIR_SWAP} -PER_ORG_CROSSOVER ${PER_ORG_CROSSOVER} -PER_ORG_MUTATION ${PER_ORG_MUTATION} -SORT_SIZE ${SORT_SIZE} -SORTS_PER_TEST ${SORTS_PER_TEST} -PER_SITE_SUB ${PER_SITE_SUB} -PER_SEQ_INVERSION ${PER_SEQ_INVERSION} -PER_SEQ_RANDOMIZE ${PER_SEQ_RANDOMIZE} -SNAPSHOT_INTERVAL ${SNAPSHOT_INTERVAL} -AGGREGATE_STATS_INTERVAL ${AGGREGATE_STATS_INTERVAL} -CORRECTNESS_SAMPLE_SIZE ${CORRECTNESS_SAMPLE_SIZE} -SOLUTION_SCREEN_INTERVAL ${SOLUTION_SCREEN_INTERVAL} -TEST_MODE ${TEST_MODE} -COHORT_SIZE ${COHORT_SIZE} -SELECTION_MODE ${SELECTION_MODE} > run.log